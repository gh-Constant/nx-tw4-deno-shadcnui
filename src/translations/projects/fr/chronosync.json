{
  "title": "ChronoSync",
  "description": "Un outil moderne de gestion du temps conçu pour les développeurs. Conçu pour vous aider à vous concentrer sur ce qui compte le plus.",
  "longDescription": "ChronoSync est une solution complète de gestion du temps conçue spécifiquement pour les développeurs et les professionnels créatifs. L'application combine des technologies web modernes avec une application de bureau native pour fournir un suivi du temps transparent sur toutes les plateformes.",
  "year": "2024",
  "technologies": ["Nuxt.js", "Vue.js", "Tailwind CSS", "C++", "Express.js", "PostgreSQL"],
  "sections": [
    {
      "type": "title",
      "content": "Aperçu du Projet"
    },
    {
      "type": "text",
      "content": "ChronoSync représente une approche moderne de la gestion du temps, spécifiquement conçue pour les développeurs et les professionnels créatifs. L'application intègre de manière transparente les technologies web et de bureau pour fournir une expérience unifiée sur toutes les plateformes."
    },
    {
      "type": "title",
      "content": "Architecture"
    },
    {
      "type": "image",
      "image": "/images/chronosync/nx.png",
      "caption": "Figure 2 : Architecture monorepo NX pour une gestion optimisée du projet"
    },
    {
      "type": "text",
      "content": "La figure 2 est une capture d'écran du dossier « packages » du dépôt GitHub de ChronoSync. On y voit quatre dossiers : desktop, mobile, web et shared. Chacun correspond à une version différente de l'application (ordinateur, mobile et navigateur web), tandis que le dossier shared contient du code commun utilisé par toutes ces plateformes. Cela montre l'utilisation d'une structure en mono-repository, c'est-à-dire un seul projet regroupant toutes les plateformes, permettant de partager facilement des morceaux de code."
    },
    {
      "type": "text",
      "content": "Comme indiqué dans la légende, ce mono-repository a été mis en place à l'aide de Nx, un outil conçu pour organiser ce type de projet, et de pnpm, un gestionnaire de paquets moderne utilisé pour installer, compiler et gérer les différentes parties de l'application. Cette structure permet de développer plusieurs plateformes en parallèle tout en maintenant une cohérence globale du projet."
    },
    {
      "type": "text",
      "content": "Cette organisation montre une compréhension solide de l'architecture multi-plateforme. Regrouper les différentes versions de l'application au sein d'un seul dépôt permet de réutiliser le code, de centraliser la logique métier et de limiter la duplication. Cela facilite aussi la scalabilité du projet et rend plus simple la synchronisation entre les équipes ou les modules. Même si je n'ai expérimenté cette architecture que sur ce projet, je me sens capable de m'intégrer ou de contribuer efficacement à d'autres projets structurés de cette manière."
    },
    {
      "type": "text",
      "content": "L'utilisation de pnpm à la place de npm ou yarn s'inscrit dans une logique de performance et de maintenabilité. Dans un projet JavaScript/TypeScript, le gestionnaire de paquets est un outil essentiel qui permet d'installer et d'organiser les bibliothèques du projet. J'ai choisi pnpm pour ses avantages concrets : rapidité d'installation, économie d'espace disque grâce aux liens symboliques, et meilleure gestion des dépendances. Cela m'a permis de gérer efficacement plusieurs packages en parallèle dans un environnement mono-repo, tout en gardant des versions cohérentes entre eux. Je me considère aujourd'hui assez qualifié dans l'utilisation des gestionnaires de paquets comme pnpm, npm ou bun. Je les ai utilisés dans la grande majorité de mes projets personnels et professionnels, notamment lors de la création de sites web comme des gestionnaires de tâches."
    },
    {
      "type": "text",
      "content": "La mise en place du package shared montre une volonté claire d'optimiser la structure du projet. Ce module contient les fonctions, types ou modèles communs utilisés par toutes les plateformes. Cela permet d'assurer une logique uniforme et de réduire les erreurs ou incohérences. Cependant, je pense avoir encore des progrès à faire dans l'utilisation de ce type de package, notamment lorsqu'il s'agit de partager du code entre des technologies ou langages différents. C'est un point que j'ai peu approfondi dans ce projet. En revanche, sur le plan de la modularité générale du code, je pense avoir un bon niveau. Par exemple, dans mon projet \"Puissance X\", un jeu vidéo développé en Java, j'ai appliqué le modèle MVC, ce qui m'a permis de mieux organiser le code et de le rendre plus lisible et maintenable."
    },
    {
      "type": "image",
      "image": "/images/chronosync/backend.png",
      "caption": "API Express.js pour la gestion centralisée des données et services"
    },
    {
      "type": "text",
      "content": "Le backend est développé avec Express.js, offrant une API REST robuste et performante. Cette architecture permet une communication fluide entre les applications web et desktop, avec une gestion centralisée des données et de l'authentification."
    },
    {
      "type": "title",
      "content": "Authentification Web"
    },
    {
      "type": "image",
      "image": "/images/chronosync/login.png",
      "caption": "Interface de connexion web avec système d'authentification moderne"
    },
    {
      "type": "text",
      "content": "L'interface de connexion web offre une expérience d'authentification moderne et intuitive avec un design responsive et une gestion sécurisée des identifiants."
    },
    {
      "type": "title",
      "content": "Application Desktop"
    },
    {
      "type": "image",
      "image": "/images/chronosync/logindesktop.png",
      "caption": "Écran de connexion de l'application desktop avec style natif"
    },
    {
      "type": "text",
      "content": "L'application desktop dispose d'un écran de connexion natif qui s'intègre parfaitement au système d'exploitation tout en maintenant les mêmes standards de sécurité que la version web."
    },
    {
      "type": "title",
      "content": "Gestion des Tokens & URI"
    },
    {
      "type": "video",
      "video": "/videos/chronosync/URIshowcase.mp4",
      "caption": "Démonstration des requêtes URI montrant la génération et gestion des tokens d'authentification",
      "muted": true
    },
    {
      "type": "text",
      "content": "Le système d'authentification démontre comment les requêtes URI gèrent la génération et la gestion des tokens pour un accès sécurisé à l'application desktop."
    },
    {
      "type": "title",
      "content": "Fonctionnalités Principales"
    },
    {
      "type": "image",
      "image": "/images/chronosync/database.png",
      "caption": "Architecture de base de données et système de gestion des données"
    },
    {
      "type": "image",
      "image": "/images/chronosync/email.png",
      "caption": "Système de notifications email pour les mises à jour de projets et rappels"
    },
    {
      "type": "text",
      "content": "L'application propose un tableau de bord complet pour le suivi du temps, la gestion de projets et l'analyse de productivité. Les utilisateurs peuvent basculer facilement entre les interfaces web et desktop tout en maintenant des données synchronisées."
    },
    {
      "type": "title",
      "content": "Algorithmes Avancés"
    },
    {
      "type": "image",
      "image": "/images/chronosync/blurryAlgorithm.png",
      "caption": "Algorithme de détection de flou pour le suivi de concentration et mesure de productivité"
    },
    {
      "type": "image",
      "image": "/images/chronosync/closeAlgorithm.png",
      "caption": "Algorithme de fermeture de session pour le suivi automatique du temps et préservation des données"
    },
    {
      "type": "text",
      "content": "ChronoSync implémente des algorithmes sophistiqués pour l'optimisation du temps et l'analyse de productivité, incluant la détection de flou pour le suivi de concentration et la gestion intelligente des sessions."
    },
    {
      "type": "title",
      "content": "Intégrations"
    },
    {
      "type": "image",
      "image": "/images/chronosync/clickup.png",
      "caption": "Intégration ClickUp pour un workflow de gestion de projet fluide"
    },
    {
      "type": "text",
      "content": "La plateforme s'intègre parfaitement avec les outils de gestion de projet populaires et fournit un accès API complet pour les workflows personnalisés et applications tierces."
    },
    {
      "type": "title",
      "content": "Stack Technique"
    },
    {
      "type": "text",
      "content": "Frontend développé avec Nuxt.js et Vue.js, exploitant le rendu côté serveur pour des performances optimales. Backend Express.js avec PostgreSQL pour une gestion robuste des données. Application desktop en C++ pour des performances natives."
    }
  ]
}